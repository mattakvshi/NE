version: "3.9"

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.0
    container_name: broker
    ports:
      - "9092:9092"
      - "9093:9093"  # Добавляем порт для OUTSIDE
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: INSIDE://broker:9092,OUTSIDE://localhost:9093  # Указываем оба слушателя
      KAFKA_LISTENERS: INSIDE://broker:9092,OUTSIDE://localhost:9093  # Указываем оба слушателя
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT  # Указываем протоколы безопасности
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE  # Указываем, какой слушатель использовать для межброкерного общения
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    volumes:
      - ./redisdata:/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
        redis-server /usr/local/etc/redis/redis.conf
      '
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  near_db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: vvsimax2003
      POSTGRES_DB: FirstDB4NEAR
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  app:
    restart: always
    build: ../NEAR_API/
    ports:
      - "8080:8080"
    depends_on:
      - near_db
      - broker
      - redis
    environment:
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://near_db:5432/FirstDB4NEAR' # Указываем адрес базы
      KAFKA_BOOTSTRAP_SERVERS: 'broker:9092'  # Указываем адрес Kafka брокера
      REDIS_HOST: 'redis_container'  # Указываем адрес Redis
      REDIS_PORT: '6379'   

volumes:
  postgres-data:
    driver: local